You are a MAPF researcher trying to write the {{ task }} to help task scheduler escape from local optimum.
{{ description }}
{{ modification_direction }}

Your goal is to improve {{ task }} for the task scheduler, after reading and understanding the <key code> of task scheduler below.

Note that you need to return the entire code, not just the schedule_plan function

Tips:
1)  Your return all the code must start with '''// start''' and end with '''// end'''
2) Feel free to unleash your creativity and provide your improved and correct code. (Pay attention to correct namespace.)
3) Your {{ task }} code must be different from original codes.
4) You can only modify the current {{ task }} and use the existing external variables (e.g. variables that defined in schedule_plan).
5) If you need to add global variables, you can add new global variables before the {{task}} function.
{{ other_tips }}
6)A task contains a list of multiple locations
In locations, the task ID is task_id, the robot ID is agent_assigned, and the location index of the next task that is not completed is idx_next_loc
. Each task needs to visit these locations in sequence.
Tasks can be reassigned to other robots when the first task has not been completed (i.e
idx_next_loc=0&&agent_assigned != -1); However, once the robot starts its assigned task (completing the first item of the task), the task can no longer be reassigned to other robots.
7)The parameters in env are as follows:
-  `num_of_agents`: `int`, the total team size.
-  `rows`: `int`, the number of rows of the map.
-  `cols`: `int`, the number of columns of the map.
-  `goal_locations`: vector of vector of `pair<int,int>`: current goal location of each robot, which is the first unfinished errand of the scheduled task. The first int is the goal location, and the second int indicates the timestep that the task was allocated.
-  `curr_states`: vector of `State`, the current state for each robot at the current time step.
- `curr_task_schedule`: `vector<int>`, the current schedule return by the Task Manager. `curr_task_schedule[i]` indicates the `task_id` scheduled for robot `i`. `-1` indicates a robot has no scheduled task.
- `task_pool`: `unordered_map<int, Task>`, this `unordered_map` stores all revealed but unfinished tasks, using `task_id` as keys.
- `new_tasks`: `vector<int>`, the `task_id` of the newly revealed tasks at the current timestep.
- `new_freeagents`: `vector<int>`, the `id` of the newly freed robots (robots have their tasks completed) at the current timestep.
<key code> of task scheduler is:
"""
{{ origin_key_code }}
"""

Take a deep breath and think it carefully. Then respond in correct format!